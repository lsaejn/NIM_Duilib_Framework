// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "../stdafx.h"
#include "pgcell.h"

/////////////////////////////////////////////////////////////////////////////
// CPgCell

IMPLEMENT_DYNCREATE(CPgCell, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CPgCell properties

unsigned long CPgCell::GetFixedCellBackColor()
{
	unsigned long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CPgCell::SetFixedCellBackColor(unsigned long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

unsigned long CPgCell::GetPgCellBackColor()
{
	unsigned long result;
	GetProperty(0x9, VT_I4, (void*)&result);
	return result;
}

void CPgCell::SetPgCellBackColor(unsigned long propVal)
{
	SetProperty(0x9, VT_I4, propVal);
}

unsigned long CPgCell::GetSetPGOCXBKColor()
{
	unsigned long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CPgCell::SetSetPGOCXBKColor(unsigned long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

unsigned long CPgCell::GetTableSheetColor()
{
	unsigned long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CPgCell::SetTableSheetColor(unsigned long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

short CPgCell::GetPgCellStyle()
{
	short result;
	GetProperty(0xc, VT_I2, (void*)&result);
	return result;
}

void CPgCell::SetPgCellStyle(short propVal)
{
	SetProperty(0xc, VT_I2, propVal);
}

unsigned long CPgCell::GetFocusCellBKColor()
{
	unsigned long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CPgCell::SetFocusCellBKColor(unsigned long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CPgCell operations

void CPgCell::SetRowCount(short nRows)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xe, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRows);
}

void CPgCell::SetColCount(short nCols)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nCols);
}

void CPgCell::ShowPgCell(short nWhichPg, long bShow)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nWhichPg, bShow);
}

void CPgCell::AddPages(LPCTSTR strLabel, short nPages)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strLabel, nPages);
}

void CPgCell::DeletePages(short nIndex, short nCount)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nIndex, nCount);
}

void CPgCell::InsertPages(LPCTSTR strLabel, short nLocation, short nCount)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_I2;
	InvokeHelper(0x13, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strLabel, nLocation, nCount);
}

short CPgCell::GetCurrentPage()
{
	short result;
	InvokeHelper(0x14, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

void CPgCell::SetCurrentPage(short nCurPage, long bShow)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4;
	InvokeHelper(0x15, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nCurPage, bShow);
}

short CPgCell::GetTotalPages()
{
	short result;
	InvokeHelper(0x16, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

void CPgCell::ResetContent()
{
	InvokeHelper(0x17, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

BOOL CPgCell::SetPageLabel(short nWhichPage, LPCTSTR lpsPageLabel)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_BSTR;
	InvokeHelper(0x18, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nWhichPage, lpsPageLabel);
	return result;
}

BOOL CPgCell::GetPageLabel(short nWhichPage, BSTR* lpsPageLabel)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_PBSTR;
	InvokeHelper(0x19, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nWhichPage, lpsPageLabel);
	return result;
}

BOOL CPgCell::SetFixedRowCount(short nFixedRows)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x1a, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nFixedRows);
	return result;
}

BOOL CPgCell::SetFixedColCount(short nFixedCols)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x1b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nFixedCols);
	return result;
}

BOOL CPgCell::SetTextBkColor(unsigned long clrTextBkColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrTextBkColor);
	return result;
}
BOOL CPgCell::SetItemText(short nRow, short nCol, LPCTSTR lpcsItemText)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR;
	InvokeHelper(0x1d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, lpcsItemText);
	return result;
}
BOOL CPgCell::GetItemText(short nRow, short nCol, VARIANT* pvarItemText)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_PVARIANT;
	InvokeHelper(0x1e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, pvarItemText);
	return result;
}

short CPgCell::GetRowCount()
{
	short result;
	InvokeHelper(0x1f, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CPgCell::GetColCount()
{
	short result;
	InvokeHelper(0x20, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::SetItemState(short nRow, short nCol, double dwState)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_R8;
	InvokeHelper(0x21, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, dwState);
	return result;
}

BOOL CPgCell::MergeCells(short nStartRow, short nStartCol, short nEndRow, short nEndCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x22, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartRow, nStartCol, nEndRow, nEndCol);
	return result;
}

BOOL CPgCell::UnMergeCells(short nStartRow, short nStartCol, short nEndRow, short nEndCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x23, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartRow, nStartCol, nEndRow, nEndCol);
	return result;
}

BOOL CPgCell::SetRowHeight(short nRow, short nHeight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x24, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nHeight);
	return result;
}

BOOL CPgCell::SetColWidth(short nCol, short nWidth)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x25, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCol, nWidth);
	return result;
}

BOOL CPgCell::SetFixedBkColor(unsigned long clrFixedBkColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x26, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrFixedBkColor);
	return result;
}

BOOL CPgCell::SetFixedTextColor(unsigned long clrFixedTextColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x27, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrFixedTextColor);
	return result;
}

LPDISPATCH CPgCell::GetFont()
{
	LPDISPATCH result;
	InvokeHelper(0x28, DISPATCH_METHOD, VT_DISPATCH, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::SetGridBkColor(unsigned long clrGridBkColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2a, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrGridBkColor);
	return result;
}

BOOL CPgCell::SetGridColor(unsigned long clrGridColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrGridColor);
	return result;
}

BOOL CPgCell::SetGridLineColor(unsigned long clrGridLineColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrGridLineColor);
	return result;
}

BOOL CPgCell::SetCellType(short nRow, short nCol, long unCellType)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4;
	InvokeHelper(0x2d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, unCellType);
	return result;
}

BOOL CPgCell::SetItemTextFmt(short nRow, short nCol, long unFmt)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4;
	InvokeHelper(0x2e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, unFmt);
	return result;
}

BOOL CPgCell::SetTextColor(unsigned long clrTextColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrTextColor);
	return result;
}

BOOL CPgCell::AutoSize()
{
	BOOL result;
	InvokeHelper(0x30, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DeleteRow(short nRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x31, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow);
	return result;
}

BOOL CPgCell::Print()
{
	BOOL result;
	InvokeHelper(0x33, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::PrintPreview()
{
	BOOL result;
	InvokeHelper(0x34, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

long CPgCell::GetCellDC(short nRow, short nCol)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x35, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::InsertRow(LPCTSTR strRowHeading, short nInsertRowPos)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x36, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strRowHeading, nInsertRowPos);
	return result;
}

BOOL CPgCell::InsertCol(LPCTSTR strColHeading, short nInsertColPos)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0x37, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strColHeading, nInsertColPos);
	return result;
}

BOOL CPgCell::DeleteCol(short nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x38, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCol);
	return result;
}

BOOL CPgCell::SetCurrDrawModelCell(short nRow, short nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x39, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::LineTo(short nStartPosX, short nStartPosY, short nEndPosX, short nEndPosY)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x3a, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartPosX, nStartPosY, nEndPosX, nEndPosY);
	return result;
}

BOOL CPgCell::SetLineStyle(long unStyle, short nLineWidth, unsigned long clrColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_I4;
	InvokeHelper(0x3b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		unStyle, nLineWidth, clrColor);
	return result;
}

BOOL CPgCell::Circle(short nCirclePointX, short nCirclePointY, short nCircleRadius)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x3c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCirclePointX, nCirclePointY, nCircleRadius);
	return result;
}

BOOL CPgCell::AddComboCellItem(short nRow, short nCol, LPCTSTR strItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR;
	InvokeHelper(0x3d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, strItem);
	return result;
}

BOOL CPgCell::SetCellFont(short nRow, short nCol, long nHeight, long nWidth, long lnStyle, LPCTSTR strFontName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x3e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, nHeight, nWidth, lnStyle, strFontName);
	return result;
}

BOOL CPgCell::SetItemBkColour(short nRow, short nCol, unsigned long clrBkColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4;
	InvokeHelper(0x41, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, clrBkColor);
	return result;
}

BOOL CPgCell::SetPageTableColor(unsigned long nColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x42, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nColor);
	return result;
}

BOOL CPgCell::SetComboCellCurSel(short nRow, short nCol, short nCurSel)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x43, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, nCurSel);
	return result;
}

short CPgCell::GetComboCellCurSel(short nRow, short nCol)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x44, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nRow, nCol);
	return result;
}

short CPgCell::GetColWidth(short nCol)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x45, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nCol);
	return result;
}

short CPgCell::GetRowHeight(short nRow)
{
	short result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x46, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nRow);
	return result;
}

BOOL CPgCell::DrawText(short nDarwPosX, short nDarwPosY, LPCTSTR strText, short nTextAlign)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR VTS_I2;
	InvokeHelper(0x47, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nDarwPosX, nDarwPosY, strText, nTextAlign);
	return result;
}

BOOL CPgCell::LineToHook(short nStartPosX, short nStartPosY, short nEndPosX, short nEndPosY, short nFlag, short nPara)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x48, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartPosX, nStartPosY, nEndPosX, nEndPosY, nFlag, nPara);
	return result;
}

BOOL CPgCell::SetCellFillRect()
{
	BOOL result;
	InvokeHelper(0x49, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::SetDrawTextFontStyle(short nHeight, short nWidth, short nWeight, LPCTSTR strFontName, unsigned long clrText)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_BSTR VTS_I4;
	InvokeHelper(0x4a, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nHeight, nWidth, nWeight, strFontName, clrText);
	return result;
}

BOOL CPgCell::SetDrawTextFontStyleDef(short nHeight, short nWidth, short nWeight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x4b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nHeight, nWidth, nWeight);
	return result;
}

BOOL CPgCell::Save()
{
	BOOL result;
	InvokeHelper(0x4c, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::Load()
{
	BOOL result;
	InvokeHelper(0x4d, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::SetCellRowFillRect(short nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x4e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCol);
	return result;
}

BOOL CPgCell::ArcToHook(short nStartPointX, short nStartPointY, short nEndPointX, short nEndPointY, short nAngle, short nDirection, short nFlag)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x4f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartPointX, nStartPointY, nEndPointX, nEndPointY, nAngle, nDirection, nFlag);
	return result;
}

BOOL CPgCell::Arc(short nStartPointX, short nStartPointY, short nEndPointX, short nEndPointY, short nAngle, short nDirection)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x50, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartPointX, nStartPointY, nEndPointX, nEndPointY, nAngle, nDirection);
	return result;
}

BOOL CPgCell::SetArcHookStyle(short nArcRadius, short nArcExtendLen)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x51, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nArcRadius, nArcExtendLen);
	return result;
}

BOOL CPgCell::SetHookStyle(short nArcRadius, short nArcExtendLen)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x52, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nArcRadius, nArcExtendLen);
	return result;
}

BOOL CPgCell::SetCellColFillRect(short nRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x53, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow);
	return result;
}

BOOL CPgCell::Polygon(short nCircleX, short nCircleY, short nRadius, short nBorders, short nFlag)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x54, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCircleX, nCircleY, nRadius, nBorders, nFlag);
	return result;
}

BOOL CPgCell::PolygonToHook(short nCircleX, short nCircleY, short nRadius, short nBorders, short nStartAngle, short nHookFlag, float nMark)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_R4;
	InvokeHelper(0x55, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCircleX, nCircleY, nRadius, nBorders, nStartAngle, nHookFlag, nMark);
	return result;
}

BOOL CPgCell::DrawRectangle(short nStartPosX, short nStartPosY, short nEndPosX, short nEndPosY)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x56, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartPosX, nStartPosY, nEndPosX, nEndPosY);
	return result;
}

BOOL CPgCell::ShowModifySteelDlg()
{
	BOOL result;
	InvokeHelper(0x57, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::ShowSelfDrawDlg(short Row, short Col)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x58, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Row, Col);
	return result;
}

BOOL CPgCell::SetVectorModel(BOOL bVectorModel)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x59, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bVectorModel);
	return result;
}

BOOL CPgCell::EnableCellCrossLine(short nStartRow, short nStartCol, short nEndRow, short nEndCol, BOOL bEnable)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0x5a, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartRow, nStartCol, nEndRow, nEndCol, bEnable);
	return result;
}

BOOL CPgCell::DescribeGraph(long nGraphNum, long nDataFlag, long nDataSum, double* adGraphInfo)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_PR8;
	InvokeHelper(0x5b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nGraphNum, nDataFlag, nDataSum, adGraphInfo);
	return result;
}

short CPgCell::GetHookArcRadius(short nRow, short nCol)
{
	short result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x5c, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::SetCellReadOnly(short nRow, short nCol, BOOL bReadOnly)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0x5d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, bReadOnly);
	return result;
}

BOOL CPgCell::AppendRow(short nRows)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x5e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRows);
	return result;
}

BOOL CPgCell::AppendCol(short nCols)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x5f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCols);
	return result;
}

BOOL CPgCell::GetSteelInfo(short nRow, short nCol, long* nSteelNO, short* nValueCount, BSTR* aStrData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_PI4 VTS_PI2 VTS_PBSTR;
	InvokeHelper(0x60, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, nSteelNO, nValueCount, aStrData);
	return result;
}

BOOL CPgCell::SetSteelInfo(short nRow, short nCol, long lSteelNO, short nTextValueNO, LPCTSTR strData)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4 VTS_I2 VTS_BSTR;
	InvokeHelper(0x61, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, lSteelNO, nTextValueNO, strData);
	return result;
}

BOOL CPgCell::EnableTitleTips(long bTitleTips)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x62, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bTitleTips);
	return result;
}

double CPgCell::GetCellData(short nRow, short nCol)
{
	double result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x63, DISPATCH_METHOD, VT_R8, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::SetCellValue(short nRow, short nCol, double dvalue, short ndigit)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_R8 VTS_I2;
	InvokeHelper(0x64, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, dvalue, ndigit);
	return result;
}

BOOL CPgCell::ReadSteelDataBase(LPCTSTR strSteelDataAddress)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x65, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strSteelDataAddress);
	return result;
}

BOOL CPgCell::SetCellSteelGraph(short Row, short Col, long nSteelNO, short nValueCount, double* pDValueData, short ndigit)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4 VTS_I2 VTS_PR8 VTS_I2;
	InvokeHelper(0x66, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Row, Col, nSteelNO, nValueCount, pDValueData, ndigit);
	return result;
}

BOOL CPgCell::SetReadOnly(BOOL bReadOnly)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x67, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bReadOnly);
	return result;
}

long CPgCell::GetAllGraphDataAddress(short* pGraphDataCount)
{
	long result;
	static BYTE parms[] =
		VTS_PI2;
	InvokeHelper(0x68, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		pGraphDataCount);
	return result;
}

BOOL CPgCell::SetAllGraphDataAddress(long pDataAddress, short nGraphDataCount)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x69, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		pDataAddress, nGraphDataCount);
	return result;
}

long CPgCell::BuildSearchSteelGraphData(short nSortClass, short nfoldCount, short nHooKCount, short nPara)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x6a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nSortClass, nfoldCount, nHooKCount, nPara);
	return result;
}

BOOL CPgCell::SetCellSearchSteelGraph(short Row, short Col, short nNO)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x6b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Row, Col, nNO);
	return result;
}

long CPgCell::DoGetCurrentRow()
{
	long result;
	InvokeHelper(0x6c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CPgCell::DoGetCurrentCol()
{
	long result;
	InvokeHelper(0x6d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DeleteRows(short Row, short Count)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x6e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Row, Count);
	return result;
}

BOOL CPgCell::DeleteCols(short Col, short Count)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x6f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		Col, Count);
	return result;
}

BOOL CPgCell::SetPrintTitle(LPCTSTR strPrintHeader)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x70, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strPrintHeader);
	return result;
}

BOOL CPgCell::SetCellCheckVal(short nRow, short nCol, BOOL bVal)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0x71, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, bVal);
	return result;
}

BOOL CPgCell::GetCellCheckVal(short nRow, short nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x72, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::SetCellTypeA(short nRow, short nCol, long unCellType, long lStyle)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4 VTS_I4;
	InvokeHelper(0x73, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, unCellType, lStyle);
	return result;
}

BOOL CPgCell::SetCellMoveDirection(short nMovDirection, BOOL bNewLineDirection)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_BOOL;
	InvokeHelper(0x74, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nMovDirection, bNewLineDirection);
	return result;
}

BOOL CPgCell::RemoveAllComboCellItem(short nRow, short nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x75, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol);
	return result;
}

CString CPgCell::GetCellString(short nRow, short nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x76, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nRow, nCol);
	return result;
}

CString CPgCell::GetPageLabelText(short nPageIndex)
{
	CString result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x77, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nPageIndex);
	return result;
}

BOOL CPgCell::SetCellBatchModifiable(BOOL bBatchModifiable)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x78, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bBatchModifiable);
	return result;
}

BOOL CPgCell::AddTreeCell(short nRow, short nCol, short* TreeData, short nAmount, long lStyle)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_PI2 VTS_I2 VTS_I4;
	InvokeHelper(0x79, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, TreeData, nAmount, lStyle);
	return result;
}

BOOL CPgCell::ShowTabSheet(BOOL bShowTabSheet)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x7a, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bShowTabSheet);
	return result;
}

BOOL CPgCell::SetCellFocus(short nRow, short nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x7b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::GetCellFocus(short* pnRow, short* pnCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI2 VTS_PI2;
	InvokeHelper(0x7c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		pnRow, pnCol);
	return result;
}

void CPgCell::SetCellFocusBKColor(unsigned long clrFocusCellBKClr)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 clrFocusCellBKClr);
}

unsigned long CPgCell::GetCellFocusBKColor()
{
	unsigned long result;
	InvokeHelper(0x7e, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CPgCell::RefreshCell()
{
	InvokeHelper(0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

unsigned long CPgCell::GetItemBkColour(short nRow, short nCol)
{
	unsigned long result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x80, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::SetGridRowHeight(short nGridRowHeight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x81, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nGridRowHeight);
	return result;
}

BOOL CPgCell::SetGridColWidth(short nGridColWidth)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x82, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nGridColWidth);
	return result;
}

CString CPgCell::GetVersion()
{
	CString result;
	InvokeHelper(0x83, DISPATCH_METHOD, VT_BSTR, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::SetCellMoveDirectionA(short nMovDirection, short nNewLineDirection)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x84, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nMovDirection, nNewLineDirection);
	return result;
}

long CPgCell::BondTreeCtrl(long pTreeCtrl, short nStyle, LPCTSTR strRootName)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_BSTR;
	InvokeHelper(0x85, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		pTreeCtrl, nStyle, strRootName);
	return result;
}

BOOL CPgCell::Clear()
{
	BOOL result;
	InvokeHelper(0x86, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CPgCell::SetDefRowHeight(short nDefRowHeight)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x87, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nDefRowHeight);
}

void CPgCell::SetDefColWidth(short nDefColWidth)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x88, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nDefColWidth);
}

void CPgCell::SetRowSizingMode(BOOL bRowSizingMode)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x89, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bRowSizingMode);
}

BOOL CPgCell::AutoSizeColumn(short nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x8a, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCol);
	return result;
}

BOOL CPgCell::AutoSizeRow(short nRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x8b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow);
	return result;
}

void CPgCell::AutoSizeColumns()
{
	InvokeHelper(0x8c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CPgCell::AutoSizeRows()
{
	InvokeHelper(0x8d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CPgCell::SetRowHeightMin(short nRowHeightMin)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRowHeightMin);
}

long CPgCell::GetRowHeightMin()
{
	long result;
	InvokeHelper(0x8f, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CPgCell::SetColumnReadOnly(short nColumn, BOOL bReadOnly)
{
	static BYTE parms[] =
		VTS_I2 VTS_BOOL;
	InvokeHelper(0x90, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nColumn, bReadOnly);
}

void CPgCell::SetRowReadOnly(short nRow, BOOL bReadOnly)
{
	static BYTE parms[] =
		VTS_I2 VTS_BOOL;
	InvokeHelper(0x91, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, bReadOnly);
}

long CPgCell::GetTopVisibleRow()
{
	long result;
	InvokeHelper(0x92, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::SetCellFontFmt(short nRow, short nCol, short nFontSize, short nFontWeight, LPCTSTR strFontName, unsigned long clrFontColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_BSTR VTS_I4;
	InvokeHelper(0x93, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, nFontSize, nFontWeight, strFontName, clrFontColor);
	return result;
}

BOOL CPgCell::SetTopVisibleRow(short nRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x94, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow);
	return result;
}

void CPgCell::DisEditCell(BOOL bDisableEditCell)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x95, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bDisableEditCell);
}

void CPgCell::GetSelectedCellRange(short* pMinRow, short* pMinCol, short* pMaxRow, short* pMaxCol)
{
	static BYTE parms[] =
		VTS_PI2 VTS_PI2 VTS_PI2 VTS_PI2;
	InvokeHelper(0x96, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pMinRow, pMinCol, pMaxRow, pMaxCol);
}

void CPgCell::ClearContent()
{
	InvokeHelper(0x97, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CPgCell::SetGridTextAlign(short nAlign)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x98, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nAlign);
}

void CPgCell::SetColTextAlign(short nCol, short nAlign)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0x99, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nCol, nAlign);
}

long CPgCell::BondTreeCtrlNew(long pTreeCtrl, short nStyle, LPCTSTR strRootName, short nRow, short nCol)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_BSTR VTS_I2 VTS_I2;
	InvokeHelper(0x9a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		pTreeCtrl, nStyle, strRootName, nRow, nCol);
	return result;
}

void CPgCell::SetCellDATE(short nRow, short nCol, short nYear, short nMonth, short nDay)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x9b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol, nYear, nMonth, nDay);
}

void CPgCell::GetCellDATE(short nRow, short nCol, short* nYear, short* nMonth, short* nDay)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_PI2 VTS_PI2 VTS_PI2;
	InvokeHelper(0x9c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol, nYear, nMonth, nDay);
}

BOOL CPgCell::EnableVKDELETE(BOOL bEnableVKDELETE)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x9d, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bEnableVKDELETE);
	return result;
}

long CPgCell::GetSelectedCellMap(long* pCount, long* pSelectedCellRowData, long* pSelectedCellColData)
{
	long result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x9e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		pCount, pSelectedCellRowData, pSelectedCellColData);
	return result;
}

void CPgCell::PrintToVBhdc(long hdc, long left, long top, long right, long bottom, long nStartRow, long nStartCol, long nEndRow, long nEndCol, float PFDXS, long optional)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_R4 VTS_I4;
	InvokeHelper(0x9f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hdc, left, top, right, bottom, nStartRow, nStartCol, nEndRow, nEndCol, PFDXS, optional);
}

void CPgCell::SetPageTableBKColor(unsigned long clrTabSheetBKColor)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xa0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 clrTabSheetBKColor);
}

BOOL CPgCell::ClearDrawCellData(short nRow, short nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0xa1, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::SetCellPicture(short nRow, short nCol, LPCTSTR strSourcePicture, long nFlag)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR VTS_I4;
	InvokeHelper(0xa2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, strSourcePicture, nFlag);
	return result;
}

BOOL CPgCell::SetCellImage(short nRow, short nCol, long pImageList, long nImageIndex, long nFlag)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xa3, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, pImageList, nImageIndex, nFlag);
	return result;
}

BOOL CPgCell::SetItemTextColour(short nRow, short nCol, unsigned long clrTextColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4;
	InvokeHelper(0xa4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, clrTextColor);
	return result;
}

BOOL CPgCell::GetCellRect(short nRow, short nCol, long* lpRect)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_PI4;
	InvokeHelper(0xa5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, lpRect);
	return result;
}

long CPgCell::GetCellWindow()
{
	long result;
	InvokeHelper(0xa6, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::SetHeaderSort(long nByVal, BOOL bSortItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0xa7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nByVal, bSortItem);
	return result;
}

BOOL CPgCell::SetEnableMOUSESELECTCOL(BOOL bEnableMOUSESELECTCOL)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xa8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bEnableMOUSESELECTCOL);
	return result;
}

short CPgCell::GetFixedColCount()
{
	short result;
	InvokeHelper(0xa9, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

short CPgCell::GetFixedRowCount()
{
	short result;
	InvokeHelper(0xaa, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::EnableGrid(BOOL bEnableGrid)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xab, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bEnableGrid);
	return result;
}

BOOL CPgCell::SetWindowRect(long left, long top, long right, long bottom)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xac, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		left, top, right, bottom);
	return result;
}

BOOL CPgCell::SetDefaultCellFont(LPDISPATCH lpDefaultCellFont)
{
	BOOL result;
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0xad, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lpDefaultCellFont);
	return result;
}

BOOL CPgCell::SetDefaultCellFontA(LPCTSTR strFontName, long lSize, BOOL bQuality, BOOL bItalic, BOOL bStrikeOut, BOOL bUnderline)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL;
	InvokeHelper(0xae, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strFontName, lSize, bQuality, bItalic, bStrikeOut, bUnderline);
	return result;
}

void CPgCell::SetCellFocusForeColor(unsigned long clrCellFocusForeColor)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xaf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 clrCellFocusForeColor);
}

void CPgCell::SetSelectedCellRangeBKColor(unsigned long clrSelectedCellRangeBKColor)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 clrSelectedCellRangeBKColor);
}

void CPgCell::SetSelectedCellRangeTextColor(unsigned long clrSelectedCellRangeTextColor)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 clrSelectedCellRangeTextColor);
}

void CPgCell::SetSelectedCellRangeForeColor(unsigned long clrSelectedCellRangeForeColor)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 clrSelectedCellRangeForeColor);
}

void CPgCell::SetEditCellStyle(BOOL bAutoSize, BOOL bIsBorder, long lFlag)
{
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL VTS_I4;
	InvokeHelper(0xb3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bAutoSize, bIsBorder, lFlag);
}

void CPgCell::PrintPreviewA()
{
	InvokeHelper(0xb4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CPgCell::GetCellWindowA()
{
	long result;
	InvokeHelper(0xb5, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CPgCell::GetCellFont(short nRow, short nCol, long* lSize, long* lWidth, long* lHeight, long* lWeight, BSTR* pstrFontName)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PBSTR;
	InvokeHelper(0xb6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nCol, lSize, lWidth, lHeight, lWeight, pstrFontName);
	return result;
}

BOOL CPgCell::GetCellVirtualRect(short nRow, short nCol, long* lpRect)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_PI4;
	InvokeHelper(0xb7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, lpRect);
	return result;
}

BOOL CPgCell::DoSetPrintHead(LPCTSTR strLeft, LPCTSTR strMid, LPCTSTR strRight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xb8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strLeft, strMid, strRight);
	return result;
}

BOOL CPgCell::DoSetPrintFoot(LPCTSTR strLeft, LPCTSTR strMid, LPCTSTR strRight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR;
	InvokeHelper(0xb9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strLeft, strMid, strRight);
	return result;
}

BOOL CPgCell::DoExportExcelFile(LPCTSTR strExcelFileName, BOOL bOpenExcel)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xba, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strExcelFileName, bOpenExcel);
	return result;
}

BOOL CPgCell::SetDrawTextCanPickUp(short nRow, short nCol, BOOL bCanPickUpDrawText)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0xbb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, bCanPickUpDrawText);
	return result;
}

void CPgCell::DoSetPrintMargin(short top, short bottom, short left, short right)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0xbc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 top, bottom, left, right);
}

void CPgCell::DoSetPrintLabel(BOOL collabel, BOOL rowlabel)
{
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL;
	InvokeHelper(0xbd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 collabel, rowlabel);
}

void CPgCell::DoSetPrintHeadLine(BOOL bPrintHeadLine)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xbe, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bPrintHeadLine);
}

void CPgCell::DoSetPrintFootLine(BOOL bPrintFootLine)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xbf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bPrintFootLine);
}

void CPgCell::DoSetPrintPaperMode(BOOL bHOrientation)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bHOrientation);
}

BOOL CPgCell::CopyRow(short nsouRow, short ndesRow, BOOL bIncFixedCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0xc1, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nsouRow, ndesRow, bIncFixedCol);
	return result;
}

BOOL CPgCell::CopyCol(short nSouCol, short nDesCol, BOOL bIncFixedRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BOOL;
	InvokeHelper(0xc2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nSouCol, nDesCol, bIncFixedRow);
	return result;
}

BOOL CPgCell::SetCellPictureHandle(short nRow, short nCol, long unSourceHandle, long nStyle, long nAlign)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xc3, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, unSourceHandle, nStyle, nAlign);
	return result;
}

BOOL CPgCell::SetRowCountA(long lRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lRow);
	return result;
}

long CPgCell::GetCellType(short nRow, short nCol)
{
	long result;
	static BYTE parms[] =
		VTS_I2 VTS_I2;
	InvokeHelper(0xc5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CPgCell::SetBatchFlag(BOOL bBatch)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bBatch);
}

BOOL CPgCell::DrawTextR(short nDarwPosX, short nDarwPosY, LPCTSTR strVariableName, LPCTSTR strDrawText, short nTextAlign, short nAngle)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_BSTR VTS_BSTR VTS_I2 VTS_I2;
	InvokeHelper(0xc7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nDarwPosX, nDarwPosY, strVariableName, strDrawText, nTextAlign, nAngle);
	return result;
}

BOOL CPgCell::SetDrawTextR(long lRow, long lCol, LPCTSTR strVariableName, LPCTSTR strNewDrawText)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR VTS_BSTR;
	InvokeHelper(0xc8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lRow, lCol, strVariableName, strNewDrawText);
	return result;
}

BOOL CPgCell::EnableSelection(BOOL bEnableSelection)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xc9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bEnableSelection);
	return result;
}

BOOL CPgCell::SetDefTextFormat(long unFmt)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xca, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		unFmt);
	return result;
}

BOOL CPgCell::SetDrawBtnText(long nRow, long nCol, short nIndex, LPCTSTR strBtnText)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I2 VTS_BSTR;
	InvokeHelper(0xcb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, nIndex, strBtnText);
	return result;
}

BOOL CPgCell::SetRowVisible(long nRow, BOOL bVisible)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0xcc, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, bVisible);
	return result;
}

BOOL CPgCell::SetColVisible(long nCol, BOOL bVisible)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0xcd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCol, bVisible);
	return result;
}

BOOL CPgCell::SetGridColResize(BOOL bGridColResize)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xce, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bGridColResize);
	return result;
}

BOOL CPgCell::SetGridRowResize(BOOL bGridRowResize)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xcf, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bGridRowResize);
	return result;
}

BOOL CPgCell::GetCellEditingState(long lRow, long lCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xd0, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lRow, lCol);
	return result;
}

BOOL CPgCell::SetGridEndEditing()
{
	BOOL result;
	InvokeHelper(0xd1, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::EnableScrollBars(long nBar, BOOL bEnable)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0xd2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nBar, bEnable);
	return result;
}

void CPgCell::ShowErrorTip(BOOL bShowErrorTip)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bShowErrorTip);
}

CString CPgCell::GetComboCellItem(long nRow, long nCol, long nIndex)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xd4, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nRow, nCol, nIndex);
	return result;
}

long CPgCell::GetComboCellItemCount(long nRow, long nCol)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xd5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::EnableCellCheck(long nRow, long nCol, BOOL bEnableCheck)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xd6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, bEnableCheck);
	return result;
}

void CPgCell::ShowPrinterBorder(BOOL bShowPrinterBorder)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xd7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bShowPrinterBorder);
}

BOOL CPgCell::SetCellEditingState(long lRow, long lCol, BOOL bEditing)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xd8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lRow, lCol, bEditing);
	return result;
}

BOOL CPgCell::IsShowPrinterBorder()
{
	BOOL result;
	InvokeHelper(0xd9, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::SetComboCellItem(long lRow, long lCol, short nIndex, LPCTSTR strItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I2 VTS_BSTR;
	InvokeHelper(0xda, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		lRow, lCol, nIndex, strItem);
	return result;
}

long CPgCell::DelComboCellItem(long lRow, long lCol, short nIndex)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I2;
	InvokeHelper(0xdb, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		lRow, lCol, nIndex);
	return result;
}

void CPgCell::DoSetPrintFitToPage(BOOL bFitToPage)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xdc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bFitToPage);
}

BOOL CPgCell::GetRowVisible(long nRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xdd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow);
	return result;
}

BOOL CPgCell::GetColVisible(long nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xde, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nCol);
	return result;
}

BOOL CPgCell::GetCellReadOnly(long nRow, long nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xdf, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CPgCell::SetStlEditAttrib(long nRow, long nCol, long wAttrib)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xe0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol, wAttrib);
}

long CPgCell::GetStlEditAttrib(long nRow, long nCol)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xe1, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CPgCell::SetStlEditDefaultGrade(long nRow, long nCol, long nGrade)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xe2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol, nGrade);
}

long CPgCell::GetStlEditDefaultGrade(long nRow, long nCol)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xe3, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CPgCell::SetStlEditType(long nRow, long nCol, long wType)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xe4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol, wType);
}

long CPgCell::GetStlEditType(long nRow, long nCol)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xe5, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CPgCell::SetStlEditFlag(long nRow, long nCol, long wFlag, BOOL bValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xe6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol, wFlag, bValue);
}

BOOL CPgCell::GetStlEditFlag(long nRow, long nCol, long wFlag)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xe7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, wFlag);
	return result;
}

void CPgCell::EnableCellResize(BOOL bCellResize)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0xe8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bCellResize);
}

long CPgCell::GetPagesCount()
{
	long result;
	InvokeHelper(0xe9, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CPgCell::DeleteAllPages()
{
	InvokeHelper(0xea, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CPgCell::SetBatchFlagA(BOOL bBatch, long nInitCount, long nIncrement)
{
	static BYTE parms[] =
		VTS_BOOL VTS_I4 VTS_I4;
	InvokeHelper(0xeb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bBatch, nInitCount, nIncrement);
}

long CPgCell::GetRowCountA()
{
	long result;
	InvokeHelper(0xec, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

void CPgCell::EnableGridCrossLine(long lFlag)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xed, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lFlag);
}

BOOL CPgCell::SetItemTextA(long nRow, long nCol, LPCTSTR ItemText)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0xee, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, ItemText);
	return result;
}

CString CPgCell::GetCellStringA(long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xef, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::SetCellString(long nRow, long nCol, LPCTSTR strCellString)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0xf0, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, strCellString);
	return result;
}

BOOL CPgCell::SetItemTextFmtA(long nRow, long nCol, long unFmt)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xf1, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, unFmt);
	return result;
}

BOOL CPgCell::GetItemTextA(long nRow, long nCol, VARIANT* pvarItemText)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PVARIANT;
	InvokeHelper(0xf2, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, pvarItemText);
	return result;
}

void CPgCell::DrawCellHLine(long nRow, long nCol, BOOL bTop, long lLineStyle, long lLineSize, unsigned long clrLineColor)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xf3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol, bTop, lLineStyle, lLineSize, clrLineColor);
}

void CPgCell::DrawCellVLine(long nRow, long nCol, BOOL bLeft, long lLineStyle, long lLineSize, unsigned long clrLineColor)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xf4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol, bLeft, lLineStyle, lLineSize, clrLineColor);
}

void CPgCell::DrawCellXLine(long nRow, long nCol, BOOL bLeftTop, long lLineStyle, long lLineSize, unsigned long clrLineColor)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xf5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol, bLeftTop, lLineStyle, lLineSize, clrLineColor);
}

void CPgCell::ClearDrawCellLineData(long nRow, long nCol)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xf6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol);
}

BOOL CPgCell::SetItemBkColourA(long nRow, long nCol, unsigned long clrBkColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xf7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, clrBkColor);
	return result;
}

BOOL CPgCell::SetItemTextColourA(long nRow, long nCol, unsigned long clrTextColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xf8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, clrTextColor);
	return result;
}

BOOL CPgCell::InsertRowA(LPCTSTR strRowHeading, long nInsertRowPos)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0xf9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strRowHeading, nInsertRowPos);
	return result;
}

BOOL CPgCell::SetRowHeightA(long nRow, long nHeight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xfa, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nHeight);
	return result;
}

BOOL CPgCell::SetComboCellCurSelA(long nRow, long nCol, long nCurSel)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xfb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, nCurSel);
	return result;
}

BOOL CPgCell::SetCellTypeB(long nRow, long nCol, long unCellType, long lStyle)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xfc, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, unCellType, lStyle);
	return result;
}

BOOL CPgCell::SetCurrDrawModelCellA(long nRow, long nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xfd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::SetDrawTextCanPickUpA(long nRow, long nCol, BOOL bCanPickUpDrawText)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xfe, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, bCanPickUpDrawText);
	return result;
}

BOOL CPgCell::DeleteRowA(long nRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xff, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow);
	return result;
}

BOOL CPgCell::DeleteRowsA(long nStartRow, long Count)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x100, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartRow, Count);
	return result;
}

BOOL CPgCell::SetCellFocusA(long nRow, long nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x101, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::AddComboCellItemA(long nRow, long nCol, LPCTSTR strItem)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x102, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, strItem);
	return result;
}

BOOL CPgCell::SetCellReadOnlyA(long nRow, long nCol, BOOL bReadOnly)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x103, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, bReadOnly);
	return result;
}

BOOL CPgCell::MergeCellsA(long nStartRow, long nStartCol, long nEndRow, long nEndCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x104, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartRow, nStartCol, nEndRow, nEndCol);
	return result;
}

BOOL CPgCell::UnMergeCellsA(long nStartRow, long nStartCol, long nEndRow, long nEndCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x105, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStartRow, nStartCol, nEndRow, nEndCol);
	return result;
}

BOOL CPgCell::SetCellFontA(long nRow, long nCol, long nHeight, long nWidth, long lnStyle, LPCTSTR strFontName)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x106, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, nHeight, nWidth, lnStyle, strFontName);
	return result;
}

BOOL CPgCell::SetCellFontFmtA(long nRow, long nCol, long nFontSize, long nFontWeight, LPCTSTR strFontName, unsigned long clrFontColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x107, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, nFontSize, nFontWeight, strFontName, clrFontColor);
	return result;
}

BOOL CPgCell::DoExportExcelFileA(LPCTSTR strExcelFileName, BOOL bOpenExcel, BOOL bFormat)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL VTS_BOOL;
	InvokeHelper(0x108, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strExcelFileName, bOpenExcel, bFormat);
	return result;
}

BOOL CPgCell::SetCellCheckValA(long nRow, long nCol, long nVal)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x109, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, nVal);
	return result;
}

long CPgCell::GetCellCheckValA(long nRow, long nCol)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x10a, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nRow, nCol);
	return result;
}

BOOL CPgCell::SetDefaultCellTextColor(unsigned long clrDefTextColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x10b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrDefTextColor);
	return result;
}

BOOL CPgCell::SetCellTip(LPCTSTR strTip)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x10c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		strTip);
	return result;
}

CString CPgCell::GetDrawTextR(long nRow, long nCol, LPCTSTR strVariableName)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x10d, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nRow, nCol, strVariableName);
	return result;
}

BOOL CPgCell::DoGetPrintPaperMode()
{
	BOOL result;
	InvokeHelper(0x10e, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DoGetPrintMargin(long* top, long* bottom, long* left, long* right)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x10f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		top, bottom, left, right);
	return result;
}

BOOL CPgCell::DoGetPrintFitToPage()
{
	BOOL result;
	InvokeHelper(0x110, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DoGetPrintHeadLine()
{
	BOOL result;
	InvokeHelper(0x111, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DoGetPrintFootLine()
{
	BOOL result;
	InvokeHelper(0x112, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CPgCell::DoGetPrintHead(BSTR* strLeft, BSTR* strMid, BSTR* strRight)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PBSTR VTS_PBSTR;
	InvokeHelper(0x113, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strLeft, strMid, strRight);
}

void CPgCell::DoGetPrintFoot(BSTR* strLeft, BSTR* strMid, BSTR* strRight)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PBSTR VTS_PBSTR;
	InvokeHelper(0x114, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strLeft, strMid, strRight);
}

BOOL CPgCell::DoGetPrintGridFont(long* plffont)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x115, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plffont);
	return result;
}

BOOL CPgCell::DoSetPrintGridFont(long* plffont)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x116, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plffont);
	return result;
}

BOOL CPgCell::DoSetPrintFixedRowFont(long* plffont)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x117, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plffont);
	return result;
}

BOOL CPgCell::DoGetPrintFixedRowFont(long* plffont)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4;
	InvokeHelper(0x118, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plffont);
	return result;
}

BOOL CPgCell::DoSetPrintTitleFont(long* plffontLeft, long* plffontMid, long* plffontRight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x119, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plffontLeft, plffontMid, plffontRight);
	return result;
}

BOOL CPgCell::DoGetPrintTitleFont(long* plffontLeft, long* plffontMid, long* plffontRight)
{
	BOOL result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x11a, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		plffontLeft, plffontMid, plffontRight);
	return result;
}

BOOL CPgCell::DoSetPrintGridBKClr(unsigned long clrGridBK)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrGridBK);
	return result;
}

unsigned long CPgCell::DoGetPrintGridBKClr()
{
	unsigned long result;
	InvokeHelper(0x11c, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

unsigned long CPgCell::DoGetPrintFixedRowBKClr()
{
	unsigned long result;
	InvokeHelper(0x11d, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DoSetPrintFixedRowBKClr(unsigned long clrFixedRowBK)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11e, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		clrFixedRowBK);
	return result;
}

BOOL CPgCell::DoSetPrintShowFixedRow(BOOL bShowFixedRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x11f, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bShowFixedRow);
	return result;
}

BOOL CPgCell::DoGetPrintShowFixedRow()
{
	BOOL result;
	InvokeHelper(0x120, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DoSetPrintShowFixedCol(BOOL bShowFixedCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x121, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bShowFixedCol);
	return result;
}

BOOL CPgCell::DoGetPrintShowFixedCol()
{
	BOOL result;
	InvokeHelper(0x122, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DoSetPrintShowGridCrossLine(long nShowGridCrossLine)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x123, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nShowGridCrossLine);
	return result;
}

long CPgCell::DoGetPrintShowGridCrossLine()
{
	long result;
	InvokeHelper(0x124, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DoGetPrint3D()
{
	BOOL result;
	InvokeHelper(0x125, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DoSetPrint3D(BOOL b3D)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x126, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		b3D);
	return result;
}

BOOL CPgCell::DoGetPrintSingleColor()
{
	BOOL result;
	InvokeHelper(0x127, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::DoSetPrintSingleColor(BOOL bSingleColor)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x128, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bSingleColor);
	return result;
}

BOOL CPgCell::DoSetPrintShowBKClr(BOOL bShowBKClr)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x129, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bShowBKClr);
	return result;
}

BOOL CPgCell::DoGetPrintShowBKClr()
{
	BOOL result;
	InvokeHelper(0x12a, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::SetCellValueA(long nRow, long nCol, double dvalue, short ndigit)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_R8 VTS_I2;
	InvokeHelper(0x12b, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, dvalue, ndigit);
	return result;
}

BOOL CPgCell::SetCellPictureA(long nRow, long nCol, LPCTSTR strSourcePicture, long nFlag)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x12c, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, strSourcePicture, nFlag);
	return result;
}

void CPgCell::SetTabHSBarPercent(double dHSBarPercent)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x12d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 dHSBarPercent);
}

LPDISPATCH CPgCell::GetTreeCellCtrl()
{
	LPDISPATCH result;
	InvokeHelper(0x12e, DISPATCH_METHOD, VT_DISPATCH, (void*)&result, NULL);
	return result;
}

LPDISPATCH CPgCell::ExportTreeItemClass()
{
	LPDISPATCH result;
	InvokeHelper(0x12f, DISPATCH_METHOD, VT_DISPATCH, (void*)&result, NULL);
	return result;
}

BOOL CPgCell::AddComboCellItemPic(long nRow, long nCol, LPCTSTR PicPath)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x130, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nRow, nCol, PicPath);
	return result;
}

long CPgCell::GetSelectedCellMapEx(long* pIndex, long* pSelRow, long* pSelCol)
{
	long result;
	static BYTE parms[] =
		VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x131, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		pIndex, pSelRow, pSelCol);
	return result;
}

BOOL CPgCell::EnableClipboardCtrlV(BOOL bEnableClipboardCtrlV)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x132, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bEnableClipboardCtrlV);
	return result;
}

BOOL CPgCell::SetSingleRowSelection(BOOL bSinRowSele)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x133, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bSinRowSele);
	return result;
}

BOOL CPgCell::EnableClipboardCtrlC(BOOL bEnableClipboardCtrlC)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x134, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		bEnableClipboardCtrlC);
	return result;
}

void CPgCell::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
